/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jposbox;

import static java.lang.System.out;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.ResultSet;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;

/**
 *
 * @author Jove
 */
public class PosBoxFrame extends javax.swing.JFrame {
    public static String DriverDB="org.apache.derby.jdbc.EmbeddedDriver";
    static String connectionURL = "jdbc:derby:"+System.getProperty("user.home")+"/jPosBox/db;create=true";
    Statement stmt = null;

    /**
     * Creates new form PosBoxFrame
     */
    public PosBoxFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        PosBoxesComboBox = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        ComboPrinter1 = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("PosBoxes:");

        PosBoxesComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2" }));
        PosBoxesComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                PosBoxesComboBoxItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PosBoxesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(182, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(PosBoxesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(154, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("jPosBox", jPanel1);

        jLabel2.setText("Printer:");

        ComboPrinter1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboPrinter1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ComboPrinter1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(200, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ComboPrinter1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(154, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("PosBox 1", jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 189, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("PosBox 2", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        LoadDB();
    }//GEN-LAST:event_formWindowOpened

    private void PosBoxesComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_PosBoxesComboBoxItemStateChanged
        saveconf("PosBoxes",Integer.toString(PosBoxesComboBox.getSelectedIndex()));
        if (getconf("PosBoxes").toString().equals("0")){
            jTabbedPane1.setEnabledAt(1, false);
            jTabbedPane1.setEnabledAt(2, false);
        }
        else if (getconf("PosBoxes").toString().equals("1")){
            jTabbedPane1.setEnabledAt(1, true);
            jTabbedPane1.setEnabledAt(2, false);
        }
        else if (getconf("PosBoxes").toString().equals("2")){
            jTabbedPane1.setEnabledAt(1, true);
            jTabbedPane1.setEnabledAt(2, true);
        }
    }//GEN-LAST:event_PosBoxesComboBoxItemStateChanged

    private void ComboPrinter1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboPrinter1ItemStateChanged
        saveconf("Printer1", ComboPrinter1.getSelectedItem().toString());
    }//GEN-LAST:event_ComboPrinter1ItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PosBoxFrame().setVisible(true);
            }
        });
    }
    
    
    
    public void LoadDB() {
        try {
            Class.forName(DriverDB);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PosBoxFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            Connection conn = DriverManager.getConnection(PosBoxFrame.connectionURL, "PosBoxFrame", "PosBoxFrame");
            stmt = conn.createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(PosBoxFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            stmt.execute("CREATE TABLE \"conf\"\n" +
            "(\n" +
            "\"id\" INT not null primary key\n" +
            "        GENERATED ALWAYS AS IDENTITY\n" +
            "        (START WITH 1, INCREMENT BY 1),   \n" +
            "\"name\" VARCHAR(80),     \n" +
            "\"value\" VARCHAR(300)     \n" +
            ")");
            } catch (Exception e) { /*If is created do nothing*/}
        //PosBoxes
        PosBoxesComboBox.setSelectedIndex(Integer.parseInt(getconf("PosBoxes")));
        //Printers
        PrintService[] printServices = PrintServiceLookup.lookupPrintServices(null, null);
            for (PrintService printer : printServices){
            ComboPrinter1.addItem(printer.getName());
        }
        ComboPrinter1.setSelectedItem(getconf("Printer1"));
        
        
    }
    
    
    
    
    public void saveconf(String name, String value){
        int count=0;
        try {
            count = stmt.executeUpdate("UPDATE PosBoxFrame.\"conf\" SET \"value\" ='"+value+"' WHERE \"name\"='"+name+"'");
        } catch (SQLException ex) {
            Logger.getLogger(PosBoxFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (count==0) try {
            stmt.execute("INSERT INTO PosBoxFrame.\"conf\" (\"name\", \"value\") values ('"+name+"','"+value+"')");
        } catch (SQLException ex) {
            Logger.getLogger(PosBoxFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    
    public String getconf (String name) {
        ResultSet rs = null;
        String result="nothing";
        try {
            rs = stmt.executeQuery("SELECT \"value\" from PosBoxFrame.\"conf\" where \"name\"='"+name+"'");
        } catch (SQLException ex) {
            Logger.getLogger(PosBoxFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            if (rs.next()) result= rs.getString("value");
        } catch (SQLException ex) {
            Logger.getLogger(PosBoxFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        // VALORES POR DEFECTO
        if (result.equals("nothing")) {
            if (name=="PosBoxes") return "0";
            else if (name=="productswithoutcats") return "false";
            else if (name=="GroupLines") return "false";
            else if (name=="terminalrootcat") return "0";
            else if (name=="defaultTerminal") return "1";
            else if (name=="NumberPrinters") return "0";
            else if (name=="itemorder") return "1";
            else if (name.equals("SyncOnlyChangedDolibarrItems")) return "true";
        }
        // FIN VALORES POR DEFECTO
        return result;
    }
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboPrinter1;
    private javax.swing.JComboBox<String> PosBoxesComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
